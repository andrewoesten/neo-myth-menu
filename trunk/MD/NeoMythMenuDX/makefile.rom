ifdef $(GENDEV)
ROOTDIR = $(GENDEV)
else
ROOTDIR = /opt/toolchains/sega
endif

TOOLDIR = $(ROOTDIR)/bin
ASMZ80 = $(TOOLDIR)/zasm
BINTOC = $(TOOLDIR)/bin2c

LDSCRIPTSDIR = $(ROOTDIR)/ldscripts
LINKFLAGS = -T$(LDSCRIPTSDIR)/md.ld -Wl,-Map=output.map -nostdlib

LIBPATH = -L$(ROOTDIR)/m68k-elf/lib -L$(ROOTDIR)/m68k-elf/lib/gcc/m68k-elf/4.6.2 -L$(ROOTDIR)/m68k-elf/m68k-elf/lib
INCPATH = -I$(CURDIR) -I$(ROOTDIR)/m68k-elf/include -I$(ROOTDIR)/m68k-elf/m68k-elf/include
OPTION =
CCFLAGS = $(OPTION) -m68000 -Wall -O2 -c -fomit-frame-pointer -fshort-wchar -fno-strict-aliasing
HWCCFLAGS = $(OPTION) -m68000 -Wall -O1 -c -fomit-frame-pointer -fshort-wchar -fno-strict-aliasing
Z80FLAGS = -vb2
ASFLAGS = -m68000 --register-prefix-optional $(AS_FLAGS)

MDPREFIX = $(ROOTDIR)/m68k-elf/bin/m68k-elf-
CC = $(MDPREFIX)gcc
AS = $(MDPREFIX)as
LD = $(MDPREFIX)ld
OBJC = $(MDPREFIX)objcopy
RM = rm -f

BUILD = build_rom
TARGET = MDBIOS.BIN
OBJS = crt0.o main.o neo2.o font.o disk_io.o rom_io.o conf.o utility.o util_68k.o cheat.o vgm_player.o Z80.o
LIBS = $(LIBPATH) -lff -lc -lgcc -lnosys

ifneq ($(BUILD),$(notdir $(CURDIR)))

export OUTPUT  = $(CURDIR)/$(TARGET)
export VPATH   = $(CURDIR) $(CURDIR)/deluxe
export DEPENDS = $(OBJS:.o=.d)
export INCLUDE = $(INCPATH) $(foreach dir,$(VPATH),-I$(dir))

.PHONY: $(BUILD) clean install

$(BUILD):
	@[ -d $@ ] || mkdir -p $@
	@make --no-print-directory -C $(BUILD) -f $(CURDIR)/makefile.rom

clean:
	@echo cleaning ...
	@rm -fr $(BUILD) $(OUTPUT)

install: $(BUILD)
	neocmd --menu $(OUTPUT)

all: $(BUILD)

else

ELF = $(notdir $(OUTPUT)).elf

$(OUTPUT): $(ELF)
	@$(OBJC) --pad-to 524288 -O binary $(ELF) $@

$(ELF): $(OBJS)
	@echo Linking $(TARGET)...
	@$(CC) $(LINKFLAGS) -nostdlib $(OBJS) $(LIBS) -o $(ELF)

%.o80: %.s80
	@echo Compiling $(notdir $<)...
	@$(ASMZ80) $(Z80FLAGS) -o $@ $<

%.c: %.o80
	@$(BINTOC) $<

disk_io.o: disk_io.c
	@echo Compiling $(notdir $<)...
	@$(CC) -MMD $(HWCCFLAGS) $(INCLUDE) -c $< -o $@

rom_io.o: rom_io.c
	@echo Compiling $(notdir $<)...
	@$(CC) -MMD $(HWCCFLAGS) $(INCLUDE) -c $< -o $@

z80.o: z80.c
	@echo Compiling $(notdir $<)...
	@$(CC) -MMD $(HWCCFLAGS) $(INCLUDE) -c $< -o $@

%.o: %.c
	@echo Compiling $(notdir $<)...
	@$(CC) -MMD $(CCFLAGS) $(INCLUDE) -c $< -o $@

%.o: %.s
	@echo Compiling $(notdir $<)...
	@$(AS) --MD $(@:.o=.d) $(ASFLAGS) $< -o $@

-include $(DEPENDS)

endif
