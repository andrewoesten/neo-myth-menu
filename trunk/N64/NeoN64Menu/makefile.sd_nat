ROOTDIR = $(N64_INST)
GCCN64PREFIX = $(ROOTDIR)/bin/mips64-elf-
CHKSUM64PATH = $(ROOTDIR)/bin/chksum64
MKDFSPATH = $(ROOTDIR)/bin/mkdfs
MKSPRITEPATH = $(ROOTDIR)/bin/mksprite
HEADERPATH = $(ROOTDIR)/lib
N64TOOL = $(ROOTDIR)/bin/n64tool
HEADERNAME = header
LINK_FLAGS = -Map output.map -G0 -L$(ROOTDIR)/lib -L$(ROOTDIR)/mips64-elf/lib -lff -ldragon -lc -lm -ldragonsys -lnosys -Tn64ld.x
PROG_NAME = NEON64SD
CFLAGS = -std=gnu99 -march=vr4300 -mtune=vr4300 -fomit-frame-pointer -O1 -G0 -Wall -I$(ROOTDIR)/include -I$(ROOTDIR)/mips64-elf/include -DRUN_FROM_SD
CFLAGS += -DSTBI_NO_STDIO -DSTBI_NO_HDR
ASFLAGS = -mtune=vr4300 -march=vr4300
CC = $(GCCN64PREFIX)gcc
AS = $(GCCN64PREFIX)as
LD = $(GCCN64PREFIX)ld
OBJCOPY = $(GCCN64PREFIX)objcopy

OBJS = main.o neo_2_asm.o neo_2.o chksum64.o utility.o osk.o reqfile.o disk_io.o ram_io.o stb_image.o ../NeoN64Shell/libs/libconf.o  configuration.o interrupts.o

$(PROG_NAME).z64: $(PROG_NAME).dfs $(PROG_NAME).elf
	$(OBJCOPY) $(PROG_NAME).elf $(PROG_NAME).bin -O binary
	rm -f $(PROG_NAME).z64
	$(N64TOOL) -l 1280K -t "N64 Myth Menu (SD)" -h $(HEADERPATH)/$(HEADERNAME) -o $(PROG_NAME).z64 $(PROG_NAME).bin -s 1M $(PROG_NAME).dfs
	$(CHKSUM64PATH) $(PROG_NAME).z64

$(PROG_NAME).elf : $(OBJS)
	$(LD) -o $(PROG_NAME).elf $(OBJS) $(LINK_FLAGS)
	#$(CC) $(LINKFLAGS) $(CFLAGS) -O1 -S disk_io.c

$(PROG_NAME).dfs : ./filesystem/pattern0.sprite ./filesystem/pattern1.sprite ./filesystem/pattern2.sprite ./filesystem/unknown.sprite
	$(MKDFSPATH) $(PROG_NAME).dfs ./filesystem/

./filesystem/pattern0.sprite:
	$(MKSPRITEPATH) 16 pattern_0.png ./filesystem/pattern0.sprite

./filesystem/pattern1.sprite:
	$(MKSPRITEPATH) 16 pattern_1.png ./filesystem/pattern1.sprite

./filesystem/pattern2.sprite:
	$(MKSPRITEPATH) 16 pattern_2.png ./filesystem/pattern2.sprite

./filesystem/unknown.sprite:
	$(MKSPRITEPATH) 16 unknown.png ./filesystem/unknown.sprite

all: $(PROG_NAME).z64

clean:
	rm -f *.z64 *.elf *.o *.bin *.dfs ./filesystem/*.sprite

